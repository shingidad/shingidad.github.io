<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>승현아빠</title>
  
  <subtitle>개발자 아빠로 살아가기</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-05-13T13:41:46.356Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>shingidad</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>React Redux 셋팅하기</title>
    <link href="http://yoursite.com/2018/05/13/01-react-redux/"/>
    <id>http://yoursite.com/2018/05/13/01-react-redux/</id>
    <published>2018-05-13T13:38:02.000Z</published>
    <updated>2018-05-13T13:41:46.356Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-Project-에-Redux-추가하기"><a href="#React-Project-에-Redux-추가하기" class="headerlink" title="React Project 에 Redux 추가하기"></a>React Project 에 Redux 추가하기</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install i --save redux react-redux redux-logger redux-thunk</span><br></pre></td></tr></table></figure><p>.<br>├── src<br>│   ├── App.css<br>│   ├── App.js<br>│   ├── index.css<br>│   ├── index.js<br>│   ├── logo.svg<br>│   ├── reducers<br>│   │   └── index.js<br>│   └── registerServiceWorker.js</p><h3 id="src-index-js"><a href="#src-index-js" class="headerlink" title="src/index.js"></a>src/index.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// redux setting</span></span><br><span class="line"><span class="keyword">import</span> &#123; applyMiddleware, createStore &#125; <span class="keyword">from</span> <span class="string">'redux'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Provider &#125; <span class="keyword">from</span> <span class="string">'react-redux'</span>;</span><br><span class="line"><span class="keyword">import</span> thunk <span class="keyword">from</span> <span class="string">'redux-thunk'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; createLogger &#125; <span class="keyword">from</span> <span class="string">'redux-logger'</span>;</span><br><span class="line"><span class="comment">// your reducer </span></span><br><span class="line"><span class="keyword">import</span> reducer <span class="keyword">from</span> <span class="string">'./reducers'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Store 가져오기</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> getStore = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (process.env.NODE_ENV === <span class="string">'development'</span>) &#123;</span><br><span class="line">    <span class="comment">// 개발 모드일 경우, redux tool 연결</span></span><br><span class="line">    <span class="keyword">const</span> middleware = applyMiddleware(thunk, createLogger());</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.__REDUX_DEVTOOLS_EXTENSION__) &#123;</span><br><span class="line">      <span class="keyword">return</span> createStore(reducers, <span class="built_in">window</span>.__REDUX_DEVTOOLS_EXTENSION__(), middleware);</span><br><span class="line">    &#125; <span class="keyword">return</span> createStore(reducers, middleware);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> createStore(reducers, applyMiddleware(thunk));</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(React.createElement(Provider, &#123; <span class="attr">store</span>: getStore() &#125;, React.createElement(App)), <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>));</span><br></pre></td></tr></table></figure><h3 id="src-reducers-index-js"><a href="#src-reducers-index-js" class="headerlink" title="src/reducers/index.js"></a>src/reducers/index.js</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">import &#123; combineReducers &#125; from <span class="string">'redux'</span>;</span><br><span class="line"><span class="built_in">export</span> default combineReducers(&#123;&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-Project-에-Redux-추가하기&quot;&gt;&lt;a href=&quot;#React-Project-에-Redux-추가하기&quot; class=&quot;headerlink&quot; title=&quot;React Project 에 Redux 추가하기&quot;&gt;&lt;/a&gt;React Pr
      
    
    </summary>
    
    
      <category term="react" scheme="http://yoursite.com/tags/react/"/>
    
      <category term="react.js" scheme="http://yoursite.com/tags/react-js/"/>
    
      <category term="redux" scheme="http://yoursite.com/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>Git Commit Message 작성법</title>
    <link href="http://yoursite.com/2018/05/13/git_commit_messsage/"/>
    <id>http://yoursite.com/2018/05/13/git_commit_messsage/</id>
    <published>2018-05-13T10:56:22.000Z</published>
    <updated>2018-05-13T13:17:56.025Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git-Commit-Comment-작성법"><a href="#Git-Commit-Comment-작성법" class="headerlink" title="Git Commit Comment 작성법"></a>Git Commit Comment 작성법</h1><p>팀에서 git 를 쓰다보면 commit에 comment 를 그냥 막 작성하는 사람들을 간혹 있다.<br>소규모 프로젝트이고, 작업속도가 정말 생명일 경우라면 그럴 수 있다 생각하지만,</p><p>commit comment 를 대충 썼다면 결국, 대충 관리되는 프로젝트가 될수 밖에 없습니다.</p><h2 id="Header-Body-Footer-형식"><a href="#Header-Body-Footer-형식" class="headerlink" title="Header, Body, Footer 형식!"></a>Header, Body, Footer 형식!</h2><p>홈페이지를 개발할때와 비슷하게 commit 메시지도 header,body,footer로<br>나눠지며 각각 기능들은 다르다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">TYPE(Scope): Change Summary</span><br><span class="line"></span><br><span class="line">Optional Message Body</span><br><span class="line"></span><br><span class="line">Multiple paragraphs are okay.</span><br><span class="line"></span><br><span class="line">Bulleted lists:</span><br><span class="line">* are</span><br><span class="line">* also</span><br><span class="line">* okay</span><br><span class="line"></span><br><span class="line">Closes #123</span><br></pre></td></tr></table></figure><h3 id="1-Header"><a href="#1-Header" class="headerlink" title="1. Header"></a>1. Header</h3><p> <code>type</code> ( <code>scope</code> ): <code>title</code>  으로 작성하며 70자 이하로 작성하는 것이 좋다.</p><h3 id="1-1-type"><a href="#1-1-type" class="headerlink" title="1.1 type"></a>1.1 type</h3><ul><li><code>BREAK</code> : 제거 또는 이전꺼를 엄청나게 변경</li><li><code>FEAT</code> : 새로운 코드 작성</li><li><code>FIX</code> : Bug 수정완료</li><li><code>FORMAT</code> : 코드 포맷 팅, 코드 주석 변경 등(실행 코드와 별개)</li><li><code>DOCS</code> : 문서 변경(README.md, API Docs 등)  </li><li><code>TEST</code> : 테스트</li><li><code>MAINT</code> : 개발 유지보수 관련(production 과 별개)</li></ul><h3 id="1-2-scope"><a href="#1-2-scope" class="headerlink" title="1.2 scope"></a>1.2 scope</h3><p>프로젝트에 <strong>개발 범위</strong>,  막연하게 큰 범위 틀을 지칭하는 것이 아닌,<br><strong>작은 단위에 범위</strong>라고 생각하면 된다. ( <code>로그인</code>, <code>서버인증</code>) 등 소규모 범위</p><h3 id="1-3-Title"><a href="#1-3-Title" class="headerlink" title="1.3  Title"></a>1.3  Title</h3><p>commit 할때 메시지 내용 간략하게 적으며, 제목만 보고도 내용을 알수있게 해야한다.</p><h3 id="2-Body"><a href="#2-Body" class="headerlink" title="2. Body"></a>2. Body</h3><p>메시지의 본문내용을 추가하며, 주로 상세한 내용을 작성해 놓는다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Optional Message Body</span><br><span class="line"></span><br><span class="line">Multiple paragraphs are okay.</span><br><span class="line"></span><br><span class="line">Bulleted lists:</span><br><span class="line">* are</span><br><span class="line">* also</span><br><span class="line">* okay</span><br></pre></td></tr></table></figure><h3 id="3-Footer"><a href="#3-Footer" class="headerlink" title="3. Footer"></a>3. Footer</h3><p>Footer 는 Issue 가 종료되었는지 또는 구현되였는지 작성한다</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Closes #123, #456</span><br><span class="line">Implements #543</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Git-Commit-Comment-작성법&quot;&gt;&lt;a href=&quot;#Git-Commit-Comment-작성법&quot; class=&quot;headerlink&quot; title=&quot;Git Commit Comment 작성법&quot;&gt;&lt;/a&gt;Git Commit Comment 작
      
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="message" scheme="http://yoursite.com/tags/message/"/>
    
  </entry>
  
  <entry>
    <title>Mac에서 NodeJS + NPM 삭제 방법</title>
    <link href="http://yoursite.com/2018/05/13/nodejs_mac_uninstall/"/>
    <id>http://yoursite.com/2018/05/13/nodejs_mac_uninstall/</id>
    <published>2018-05-13T07:26:03.000Z</published>
    <updated>2018-05-13T11:33:38.221Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Mac에서-NodeJS-NPM-삭제-방법"><a href="#Mac에서-NodeJS-NPM-삭제-방법" class="headerlink" title="Mac에서 NodeJS + NPM 삭제 방법"></a>Mac에서 NodeJS + NPM 삭제 방법</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ lsbom -f -l -s -pf /var/db/receipts/org.nodejs.pkg.bom | <span class="keyword">while</span> <span class="built_in">read</span> f; <span class="keyword">do</span>  sudo rm /usr/<span class="built_in">local</span>/<span class="variable">$&#123;f&#125;</span>; <span class="keyword">done</span></span><br><span class="line">$ sudo rm -rf /usr/<span class="built_in">local</span>/lib/node /usr/<span class="built_in">local</span>/lib/node_modules /var/db/receipts/org.nodejs.*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/lib</span><br><span class="line">$ sudo rm -rf node*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/<span class="built_in">local</span>/include</span><br><span class="line">$ sudo rm -rf node*</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew uninstall node</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/bin</span><br><span class="line">$ sudo rm -rf /usr/local/bin/npm</span><br><span class="line">$ sudo rm -rf /usr/local/bin/node</span><br><span class="line">$ ls -las</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo rm -rf /usr/<span class="built_in">local</span>/share/man/man1/node.1</span><br><span class="line">$ sudo rm -rf /usr/<span class="built_in">local</span>/lib/dtrace/node.d</span><br><span class="line">$ sudo rm -rf ~/.npm</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Mac에서-NodeJS-NPM-삭제-방법&quot;&gt;&lt;a href=&quot;#Mac에서-NodeJS-NPM-삭제-방법&quot; class=&quot;headerlink&quot; title=&quot;Mac에서 NodeJS + NPM 삭제 방법&quot;&gt;&lt;/a&gt;Mac에서 NodeJS + NPM
      
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="uninstall" scheme="http://yoursite.com/tags/uninstall/"/>
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
      <category term="brew" scheme="http://yoursite.com/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS Mac 설치방법</title>
    <link href="http://yoursite.com/2018/05/13/nodejs_mac_install/"/>
    <id>http://yoursite.com/2018/05/13/nodejs_mac_install/</id>
    <published>2018-05-13T07:24:55.000Z</published>
    <updated>2018-05-13T11:34:21.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NodeJS-Mac-설치방법"><a href="#NodeJS-Mac-설치방법" class="headerlink" title="NodeJS Mac 설치방법"></a>NodeJS Mac 설치방법</h1><hr><p>여러 방법이 있지만 Mac에서는 brew 로 설치하는게 가장 좋습니다.<br>이유는 사실 별거 없이, permission denied 오류랑 관리하기 편하다는 이슈 뿐입니다.</p><p>그치만 nodejs 홈페이지에 접속해서 다운로드 누르고 승인하고 하는 것보다<br>터미널에 한줄만 입력하면 되니 더 간단하죠</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ brew install node</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;NodeJS-Mac-설치방법&quot;&gt;&lt;a href=&quot;#NodeJS-Mac-설치방법&quot; class=&quot;headerlink&quot; title=&quot;NodeJS Mac 설치방법&quot;&gt;&lt;/a&gt;NodeJS Mac 설치방법&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;여러 방법이 있지만 Ma
      
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
      <category term="brew" scheme="http://yoursite.com/tags/brew/"/>
    
      <category term="install" scheme="http://yoursite.com/tags/install/"/>
    
  </entry>
  
</feed>
